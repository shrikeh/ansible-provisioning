---

- name: Include CentOS
  include: centos.yml
  when: ansible_pkg_mgr == 'yum'

- name: Include Debian
  include: debian.yml
  when: ansible_pkg_mgr == 'apt'

- name: Include jails
  include_vars: jails.yml

- name: Make sure the filter.d folder exists
  file: >
    path="{{ fail2ban_filter_dir }}"
    owner="{{ fail2ban_filter_owner | default('root') }}"
    group="{{ fail2ban_filter_group | default('root') }}"
    mode="{{ fail2ban_filter_mode | default('0600') }}"
    state=directory

- name: Include the list of default filters
  include_vars: filters.yml

- debug: var="{{ item.config }}"
  with_items: fail2ban_jails

- name: Copy the correct filters into place
  template: >
    dest="{{ item.config.filter.conf.dest | default([fail2ban_filter_dir, '/', item.config.filter.name, '.conf'] | join) }}"
    src="{{ item.config.filter.conf.src }}"
    owner="{{ item.config.filter.conf.owner | default(omit) }}"
    group="{{ item.config.filter.conf.group | default(omit) }}"
    mode="{{ item.config.filter.conf.mode | default(omit) }}"
  with_items: fail2ban_jails

- name: Make sure the action.d folder exists
  file: >
    path="{{ fail2ban_action_dir }}"
    owner="{{ fail2ban_action_owner | default('root') }}"
    group="{{ fail2ban_action_group | default('root') }}"
    mode="{{ fail2ban_action_mode | default('0600') }}"
    state=directory

- name: Include the list of default actions
  include_vars: actions.yml

- name: Put the local jail in place
  template: >
    dest="{{ fail2ban_localjail_path | default('/etc/fail2ban/jail.local') }}"
    src="{{ fail2ban_localjail_template | default('jail.local.j2') }}"
    owner="{{ fail2ban_localjail_owner | default('root') }}"
    group="{{ fail2ban_localjail_group | default('root') }}"
    mode="{{ fail2ban_localjail_mode | default('0600') }}"

- name: Start fail2ban
  service: >
    name=fail2ban
    state=restarted
...
